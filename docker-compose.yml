version: '3.6'

services:


  memcached:
    image: memcached
    ports:
      - "11211:11211"
    entrypoint:
      - memcached
      - -m 64
    container_name: memcache
    restart: unless-stopped
    networks:
      - app

  djangoapp:
    build:
      context: ./services/web
      dockerfile: Dockerfile
    expose:
      - 8000
    container_name: djangoapp
    restart: unless-stopped
    tty: true
    #working_dir: /home/app
    #extra_hosts:
    #  - "internal_host:172.27.0.1"
    environment:
      SERVICE_NAME: djangoapp
    env_file:
      - ./services/web/.env
    depends_on:
      - mysqldb # <--- this can be commented depending on which database is in use
      - memcached # <--- is required for django memcache
    networks:
      - app
    volumes:
      #check the dockerfile inside web folder it contains an env variable called APP_HOME
      # the same value must be set here also by using ./:/home/project/web any changes to files on the host system
      # is immediately reflected inside the container
      - type: "bind"
        source: "./services/web"
        target: "/home/project/web"
    #  - .:/home/app/web
    #  #- ./services/web:/home/app/web/

  #mysql service
  mysqldb:
    #build:
    #  context: ./services/mysql
    #  dockerfile: Dockerfile
    image: mysql:5
    container_name: mysqldb
    restart: unless-stopped
    tty: true
    ports:
      - "33062:3306"
    volumes:
      - data-volume-mysql:/var/lib/mysql/
      #- ./mysql/my.cnf:/etc/mysql/my.cnf
    env_file:
      - ./services/mysql/.env
    networks:
      - app


  #Nginx Service
  webserver:
    build:
        context: ./services/nginx
        dockerfile: Dockerfile
    restart: always
    #image: nginx:alpine
    container_name: webserver
    environment:
      SERVICE_NAME: webserver
    restart: unless-stopped
    tty: true
    ports:
      - "80:80"
      - "81:81"
      - "443:443"
    volumes:
      #check the dockerfile inside web folder it contains an env variable called APP_HOME
      # the same value must be set here also by using ./:/home/project/web any changes to files on the host system
      # is immediately reflected inside the container
      - ./services/web/:/home/project/web
      #- ./static:/static    
    #  - ./:/home/app
    #  - ./webservices/nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - app
    depends_on:
      - djangoapp

  # Forr phpmyadmin
  pma:
      image: phpmyadmin/phpmyadmin
      container_name: phpmyadmin
      restart: always
      volumes:
        - ./:/home/project/web #<-- check services/web/dockerfile APP_HOME value
      ports:
        - "8001:80"
      depends_on:
        - mysqldb
      environment:
        PMA_HOST: mysqldb
        PMA_PORT: 3306
      networks:
        - app

networks:
  app:
    driver: bridge

volumes:
  data-volume-mysql:
    driver: local
